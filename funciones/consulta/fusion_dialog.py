# -*- coding: utf-8 -*-
"""
/***************************************************************************
 fusionDialog
                                 A QGIS plugin
 fusion
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2018-05-02
        git sha              : $Format:%H$
        copyright            : (C) 2018 by worknest
        email                : dignacio.lopez@gmail.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os

from PyQt5 import uic
from PyQt5 import QtWidgets

from PyQt5.QtGui import *
from PyQt5.QtCore import *

FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'fusion_dialog_base.ui'))

class fusionDialog(QtWidgets.QDialog, FORM_CLASS):
    def __init__(self, fraccion1 = None, fraccion2 = None, parent=None):
        """Constructor."""
        super(fusionDialog, self).__init__(parent, \
            flags=Qt.WindowCloseButtonHint)
        # Set up the user interface from Designer.
        # After setupUI you can access any designer object by doing
        # self.<objectname>, and you can use autoconnect slots - see
        # http://qt-project.org/doc/qt-4.8/designer-using-a-ui-file.html
        # #widgets-and-dialogs-with-auto-connect

        # informacion de fraccion en edicion
        self.fraccion1 = fraccion1
        self.fraccion2 = fraccion2

        # -- informacion cargada
        self.cargada = False

        # fraccion seleccionada
        self._seleccionada = None
        self._noSeleccionada = None
        self._seleccion = False

        self.setupUi(self)

    def showEvent(self, event):

        if self.cargada:
            return

        # -- Eventos
        self.btnAceptar.clicked.connect(self.event_aceptar)
        self.btnCerrar.clicked.connect(self.event_cancelar)

        # -- muestra datos necesarios
        # - fraccion 1
        frNvl_1 = 'Fraccion: ' + str(self.fraccion1['volumen']) + ' Nivel: ' + str(self.fraccion1['numNivel'])
        supCo_1 =  'Sup. Const.: ' + str(self.fraccion1['supConstFraccion'])
        self.rb1raOpcion.setText(self.fraccion1['codigoConstruccion'] if self.fraccion1['codigoConstruccion'] != '' else 'Sin Clave de uso')
        self.lbFraccNvl_1.setText(frNvl_1)
        self.lbSupConst_1.setText(supCo_1)

        # - fraccion 2
        frNvl_2 = 'Fraccion: ' + str(self.fraccion2['volumen']) + ' Nivel: ' + str(self.fraccion2['numNivel'])
        supCo_2 =  'Sup. Const.: ' + str(self.fraccion2['supConstFraccion'])
        self.rb2aOpcion.setText(self.fraccion2['codigoConstruccion'] if self.fraccion2['codigoConstruccion'] != '' else 'Sin Clave de uso')
        self.lbFraccNvl_2.setText(frNvl_2)
        self.lbSupConst_2.setText(supCo_2)

        self.cargada = True

    # --- E V E N T O S   Dialog ---
    # -- aceptar el cambio la fusion de fracciones
    def event_aceptar(self):

        self._seleccion = False

        if self.rb1raOpcion.isChecked():
            self._seleccionada = self.fraccion1
            self._noSeleccionada = self.fraccion2
            self._seleccion = True

        if self.rb2aOpcion.isChecked():
            self._seleccionada = self.fraccion2
            self._noSeleccionada = self.fraccion1
            self._seleccion = True


        self.accept()

    # -- cancelar la fusion de fracciones
    def event_cancelar(self):
        self.reject()
